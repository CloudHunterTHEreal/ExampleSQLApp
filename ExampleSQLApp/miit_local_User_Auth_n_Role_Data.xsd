<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="miit_local_User_Auth_n_Role_Data" targetNamespace="http://tempuri.org/miit_local_User_Auth_n_Role_Data.xsd" xmlns:mstns="http://tempuri.org/miit_local_User_Auth_n_Role_Data.xsd" xmlns="http://tempuri.org/miit_local_User_Auth_n_Role_Data.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="miit_localConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="miit_localConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ExampleSQLApp.Properties.Settings.GlobalReference.Default.miit_localConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="rolesTableAdapter" GeneratorDataComponentClassName="rolesTableAdapter" Name="roles" UserDataComponentName="rolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="miit_localConnectionString (Settings)" DbObjectName="miit_local.dbo.roles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[roles] WHERE (([role_name] = @Original_role_name) AND ((@IsNull_role_description = 1 AND [role_description] IS NULL) OR ([role_description] = @Original_role_description)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_role_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="role_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_role_description" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="role_description" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_role_description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="role_description" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[roles] ([role_name], [role_description]) VALUES (@role_name, @role_description);
SELECT role_name, role_description FROM roles WHERE (role_name = @role_name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@role_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="role_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@role_description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="role_description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT role_name, role_description FROM dbo.roles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[roles] SET [role_name] = @role_name, [role_description] = @role_description WHERE (([role_name] = @Original_role_name) AND ((@IsNull_role_description = 1 AND [role_description] IS NULL) OR ([role_description] = @Original_role_description)));
SELECT role_name, role_description FROM roles WHERE (role_name = @role_name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@role_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="role_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@role_description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="role_description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_role_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="role_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_role_description" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="role_description" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_role_description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="role_description" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="role_name" DataSetColumn="role_name" />
              <Mapping SourceColumn="role_description" DataSetColumn="role_description" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="usersTableAdapter" GeneratorDataComponentClassName="usersTableAdapter" Name="users" UserDataComponentName="usersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="miit_localConnectionString (Settings)" DbObjectName="miit_local.dbo.users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[users] WHERE (([nickname] = @Original_nickname) AND ([pass_hash] = @Original_pass_hash))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nickname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nickname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_pass_hash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pass_hash" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[users] ([nickname], [pass_hash]) VALUES (@nickname, @pass_hash);
SELECT nickname, pass_hash FROM users WHERE (nickname = @nickname)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nickname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nickname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@pass_hash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pass_hash" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT nickname, pass_hash FROM dbo.users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[users] SET [nickname] = @nickname, [pass_hash] = @pass_hash WHERE (([nickname] = @Original_nickname) AND ([pass_hash] = @Original_pass_hash));
SELECT nickname, pass_hash FROM users WHERE (nickname = @nickname)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@nickname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nickname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@pass_hash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pass_hash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_nickname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="nickname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_pass_hash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pass_hash" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="nickname" DataSetColumn="nickname" />
              <Mapping SourceColumn="pass_hash" DataSetColumn="pass_hash" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="miit_local_User_Auth_n_Role_Data" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="miit_local_User_Auth_n_Role_Data" msprop:Generator_DataSetName="miit_local_User_Auth_n_Role_Data">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="roles" msprop:Generator_RowEvHandlerName="rolesRowChangeEventHandler" msprop:Generator_RowDeletedName="rolesRowDeleted" msprop:Generator_RowDeletingName="rolesRowDeleting" msprop:Generator_RowEvArgName="rolesRowChangeEvent" msprop:Generator_TablePropName="roles" msprop:Generator_RowChangedName="rolesRowChanged" msprop:Generator_RowChangingName="rolesRowChanging" msprop:Generator_TableClassName="rolesDataTable" msprop:Generator_RowClassName="rolesRow" msprop:Generator_TableVarName="tableroles" msprop:Generator_UserTableName="roles">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="role_name" msprop:Generator_ColumnPropNameInRow="role_name" msprop:Generator_ColumnPropNameInTable="role_nameColumn" msprop:Generator_ColumnVarNameInTable="columnrole_name" msprop:Generator_UserColumnName="role_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="role_description" msprop:Generator_ColumnPropNameInRow="role_description" msprop:Generator_ColumnPropNameInTable="role_descriptionColumn" msprop:Generator_ColumnVarNameInTable="columnrole_description" msprop:Generator_UserColumnName="role_description" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="users" msprop:Generator_RowEvHandlerName="usersRowChangeEventHandler" msprop:Generator_RowDeletedName="usersRowDeleted" msprop:Generator_RowDeletingName="usersRowDeleting" msprop:Generator_RowEvArgName="usersRowChangeEvent" msprop:Generator_TablePropName="users" msprop:Generator_RowChangedName="usersRowChanged" msprop:Generator_RowChangingName="usersRowChanging" msprop:Generator_TableClassName="usersDataTable" msprop:Generator_RowClassName="usersRow" msprop:Generator_TableVarName="tableusers" msprop:Generator_UserTableName="users">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="nickname" msprop:Generator_ColumnPropNameInRow="nickname" msprop:Generator_ColumnPropNameInTable="nicknameColumn" msprop:Generator_ColumnVarNameInTable="columnnickname" msprop:Generator_UserColumnName="nickname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pass_hash" msprop:Generator_ColumnPropNameInRow="pass_hash" msprop:Generator_ColumnPropNameInTable="pass_hashColumn" msprop:Generator_ColumnVarNameInTable="columnpass_hash" msprop:Generator_UserColumnName="pass_hash">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:roles" />
      <xs:field xpath="mstns:role_name" />
    </xs:unique>
    <xs:unique name="users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:users" />
      <xs:field xpath="mstns:nickname" />
    </xs:unique>
  </xs:element>
</xs:schema>